<%@ Template Language="C#" ClassName="SettingsAccessRenderer" %>
<%@ Import Namespace="System" %>
 
 
// -------------------------------------------------------
// Automatically generated with Kodeo's Reegenerator
// Generator: CustomizeDesigners.Settings.SettingsRenderer
// Generation date: <%= System.DateTime.Now.ToString("yyyy-MM-dd hh:mm") %>
// Generated by: <%= System.Security.Principal.WindowsIdentity.GetCurrent().Name %>
// -------------------------------------------------------

namespace <%= this._settingsFile.GeneratedClassNamespace %> {
	
	
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
	internal sealed partial class <%= this._settingsFile.GeneratedClassName %> : global::System.Configuration.ApplicationSettingsBase {
        
		private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
		public static Settings Default {
			get {
				return defaultInstance;
			}
		}
<% RenderSettings(); %>
	}
}

<%@ Method Name="RenderSetting" %>
	<%@ Parameter Name="setting" Type="SettingsFileSetting" %>
 		[global::System.Configuration.<%= setting.Scope %>ScopedSettingAttribute()]
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.Configuration.DefaultSettingValueAttribute(<%= GetDefaultSetting(setting) %>)]
		public <%= setting.LangType %> <%= setting.PropertyName %> {
			get {
				return ((<%= setting.LangType %>)(this["<%= setting.PropertyName %>"]));
			} <% if (setting.Scope != "Application" && !setting.IsReadOnly) {%>
			set {
				this["<%= setting.PropertyName %>"] = value;
			} <% } %>
		}
<%/ Method %>



<%@ Method Name="RenderConnectionString" %>
	<%@ Parameter Name="setting" Type="SettingsFileSetting" %>
 		[global::System.Configuration.ApplicationScopedSettingAttribute()]
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
		[global::System.Configuration.DefaultSettingValueAttribute(<%= GetDefaultSetting(setting) %>)]
		public string <%= setting.Name %> {
			get {
				return ((string)(this["<%= setting.Name %>"]));
			}
		}
<%/ Method %>

<%@ Method Name="RenderWebServiceUrl" %>
	<%@ Parameter Name="setting" Type="SettingsFileSetting" %>
 		[global::System.Configuration.<%= setting.Scope %>ScopedSettingAttribute()]
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
		[global::System.Configuration.DefaultSettingValueAttribute(<%= GetDefaultSetting(setting) %>)]
		public string <%= setting.Name %> {
			get {
				return ((string)(this["<%= setting.Name %>"]));
			} <% if (setting.Scope != "Application") {%>
			set {
				this["<%= setting.Name %>"] = value;
			} <% } %>
		}
<%/ Method %>